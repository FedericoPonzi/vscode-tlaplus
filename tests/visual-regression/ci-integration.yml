# CI Integration for Visual Regression Testing
# This file provides configuration examples for integrating visual regression tests into CI/CD pipelines

# GitHub Actions Example
github_actions_example: |
  name: Visual Regression Tests
  
  on:
    pull_request:
      paths:
        - 'src/webview/**'
        - 'tests/visual-regression/**'
    push:
      branches: [main, develop]
  
  jobs:
    visual-regression:
      runs-on: ubuntu-latest
      
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'
            cache: 'npm'
        
        - name: Install dependencies
          run: npm ci
        
        - name: Install Playwright browsers
          run: npx playwright install --with-deps chromium
        
        - name: Run visual regression tests
          run: npm run test:visual-regression
        
        - name: Upload visual regression report
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: visual-regression-report
            path: tests/visual-regression/reports/
            retention-days: 30
        
        - name: Upload diff images
          if: failure()
          uses: actions/upload-artifact@v4
          with:
            name: visual-regression-diffs
            path: tests/visual-regression/diff/
            retention-days: 30
        
        - name: Comment PR with results
          if: github.event_name == 'pull_request'
          uses: actions/github-script@v7
          with:
            script: |
              const fs = require('fs');
              const path = require('path');
              
              // Read the latest report
              const reportsDir = 'tests/visual-regression/reports';
              if (fs.existsSync(reportsDir)) {
                const reports = fs.readdirSync(reportsDir)
                  .filter(f => f.startsWith('visual-regression-report-'))
                  .sort()
                  .reverse();
                
                if (reports.length > 0) {
                  const reportPath = path.join(reportsDir, reports[0]);
                  const reportUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
                  
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: `## Visual Regression Test Results
                    
                    Visual regression tests have been executed for this PR.
                    
                    ðŸ“Š [View detailed report](${reportUrl})
                    
                    If there are visual differences, please review the diff images in the artifacts.`
                  });
                }
              }
